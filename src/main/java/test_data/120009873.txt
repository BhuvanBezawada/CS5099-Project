Database creation
- Correct table definitions
- Correct fields
- Appropriate choice of types
- Correct primary keys
- Nice use of delete/update actions
- Mostly good foreign key constraints
- played_match should have (court_number, venue_name) as a single foreign key for correctness
- Did you think about AUTO_INCREMENT for the artificial ID in played_match?

SQL queries
- view_never_played working correctly, implemented as a view, with correct columns and rows
- view_contact_details working correctly, implemented as a view, with correct columns and rows
- view_win_count isn't quite right: we want *matches* won, not *games* won
- Full names are better shown without double-spacing for those without surnames.  You could get around this by using NULL for empty middle names.

Constraints
- phone_type constrained to the correct 3 values
- Email address format checked correctly
- Matches are validated with respect to scores, league years, and valid players

Procedure
- proc_add_venue included and working correctly
- No error thrown for negative number of courts

GUI
- Node.js used
- Compiles and runs correctly
- Code is rather messy
- Could use more comments
- Functionality could be broken into classes or modules better
- Seeing all matches from a league: data presented clearly, with appropriate columns but poor look-and-feel
- Some more intelligent processing would be good here: formatting dates without the time and timezone, for example
- Generic errors returned after database restrictions kick in
- More error checking or input restriction at the application level would make this even better

Report
- Clear compilation and usage instructions
- Reasonable summary of functionality
- Nice explanation of your tables and queries
- Appropriate output shown in the form of screenshots
- Screenshots of your GUI running would be good
- A little brief, not discussing missing features much - remember, there's some credit for showing understanding of advanced concepts!

Overall comments
- A coding practical containing code achieving most of the required functionality and of acceptable standard, together with a report describing clearly what was done, with good style.

14
